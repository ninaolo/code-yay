{"path":"learn/languages/java/java-pros-cons","templateID":2,"sharedPropsHashes":{},"localProps":{"node":{"text":"Pros/cons","slug":"java-pros-cons","fullPath":"/learn/languages/java/java-pros-cons","content":{"title":"Java pros and cons","slug":"java-pros-cons","contents":"<h3 id=\"pros\">Pros</h3>\n<ol>\n<li>Scalable.</li>\n<li>Much support.</li>\n<li>Garbage collection.</li>\n<li>Type check.</li>\n<li>Often “forces” a more structured code design.</li>\n<li>Because of type check etc. –&gt; often easy to debug.</li>\n<li>Often self-explanatory. In Python we often need a lot of comments to explain the code, while in Java\nyou only need comments for parts that might be extra difficult to understand.</li>\n</ol>\n<h3 id=\"cons\">Cons</h3>\n<ol>\n<li>Simple things = much code.</li>\n<li>Boolean, Integer etc. can be null, which can be confusing.</li>\n<li>Forced to use primitive wrappers if we want to put them in List, Map etc.. and\nmemory size of wrapper is bigger than the size of the primitive.</li>\n<li>Doesn’t have closures, however lambdas are pretty close.</li>\n<li>People complain about having to do null checks everywhere. However, if you use the\nNull object pattern or @NotNull you shouldn’t have to.</li>\n</ol>\n"}}}}
