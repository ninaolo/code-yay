{"path":"learn/algorithms/bst-traversal","templateID":3,"sharedPropsHashes":{},"localProps":{"node":{"text":"BST traversal","slug":"bst-traversal","fullPath":"/learn/algorithms/bst-traversal","content":{"title":"Binary search tree traversal","slug":"bst-traversal","what":"There is pre-order, in-order and post-order traversal.","how":"Recursively go through a binary tree. We have current, left and right node. | Pre-order; current is \"pre\"/before --> current, left, right. | In-order; current is \"in\"/middle --> left, current, right. | Post-order; current is \"post\"/after --> left, right, current.","contents":"<h3 id=\"implementation\">Implementation</h3>\n<pre><code class=\"lang-java\">public class Codeyay {\n\n    public static void preOrderTraversal(Node node) {\n        if (node != null) {\n            System.out.println(node); // Current\n            inOrderTraversal(node.getLeft()); // Left\n            inOrderTraversal(node.getRight()); // Right\n        }\n    }\n\n    public static void inOrderTraversal(Node node) {\n        if (node != null) {\n            inOrderTraversal(node.getLeft()); // Left\n            System.out.println(node); // Current\n            inOrderTraversal(node.getRight()); // Right\n        }\n    }\n\n    public static void preOrderTraversal(Node node) {\n        if (node != null) {\n            inOrderTraversal(node.getLeft()); // Left\n            inOrderTraversal(node.getRight()); // Right\n            System.out.println(node); // Current\n        }\n    }\n}\n</code></pre>\n"}}}}
