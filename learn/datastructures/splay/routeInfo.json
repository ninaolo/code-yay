{"path":"learn/datastructures/splay","templateID":3,"sharedPropsHashes":{},"localProps":{"node":{"text":"Splay","slug":"splay","fullPath":"/learn/datastructures/splay","content":{"title":"Splay","slug":"splay","what":"A self-balancing BST (other examples are AVL & Red-Black). Used in many applications, like gcc compiler, Unix malloc etc.","how":"When a node is searched and found, it's moved to root. | If not found, the null parent is moved to root.","contents":"<h3 id=\"why-\">Why?</h3>\n<p>Worst case for BST is O(N) when a tree is heavily unbalanced. Splay trees keep themselves balanced AND also makes\nsure common keys/nodes are at the top.</p>\n<h3 id=\"time-complexity\">Time complexity</h3>\n<ul>\n<li>Accessing recently accessed item: O(1).</li>\n<li>Average for all operations: O(log N).</li>\n</ul>\n"}}}}
