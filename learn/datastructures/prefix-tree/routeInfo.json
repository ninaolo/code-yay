{"path":"learn/datastructures/prefix-tree","templateID":3,"sharedPropsHashes":{},"localProps":{"node":{"text":"Prefix tree","slug":"prefix-tree","fullPath":"/learn/datastructures/prefix-tree","content":{"title":"Prefix tree (Trie)","slug":"prefix-tree","what":"A prefix tree (also called trie, digital tree or radix tree) is a kind of search tree. A node's position defines its key (the root's key is an empty string). All the descendants of a node have a common prefix.","averageTime":"O(M) --> M = number of characters in input search string.","contents":"<h3 id=\"what-does-it-look-like-\">What does it look like?</h3>\n<p>Below is an example of a prefix tree / trie.</p>\n<p><img src=\"/prefix-tree.png\" height=\"200\"></p>\n<p>Or transform it into a Minimized DFA (Deterministic Finite Automation)â€¦</p>\n<p><img src=\"/prefix-tree2.png\" height=\"200\"></p>\n<h3 id=\"example-applications\">Example applications</h3>\n<p>Prefix trees are good for implementing autocomplete.</p>\n"}}}}
