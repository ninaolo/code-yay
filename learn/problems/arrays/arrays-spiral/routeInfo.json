{"path":"learn/problems/arrays/arrays-spiral","templateID":3,"sharedPropsHashes":{},"localProps":{"node":{"text":"Spiral","slug":"arrays-spiral","fullPath":"/learn/problems/arrays/arrays-spiral","content":{"title":"Go through matrix in a spiral","slug":"arrays-spiral","contents":"<h3 id=\"complexity\">Complexity</h3>\n<p>O(N) time + O(N) space for path.</p>\n<h3 id=\"solution\">Solution</h3>\n<pre><code class=\"lang-java\">public class Codeyay {\n\n    public static int[] spiral(int[][] matrix) {\n        int col = matrix.length / 2;\n        int row = matrix.length / 2;\n        int[] path = new int[matrix.length * matrix.length];\n        int pathIdx = 0;\n        path[pathIdx] = matrix[col][row];\n\n        for (int subSize = 3; subSize &lt;= matrix.length; subSize += 2) {\n\n            // Go 1 step left.\n            path[++pathIdx] = matrix[row][--col];\n\n            // Go down all the way.\n            for (int i = 0; i &lt; subSize - 2; i++) {\n                path[++pathIdx] = matrix[++row][col];\n            }\n\n            // Go right all the way.\n            for (int i = 0; i &lt; subSize - 1; i++) {\n                path[++pathIdx] = matrix[row][++col];\n            }\n\n            // Go up all the way.\n            for (int i = 0; i &lt; subSize - 1; i++) {\n                path[++pathIdx] = matrix[--row][col];\n            }\n\n            // Go left all the way.\n            for (int i = 0; i &lt; subSize - 1; i++) {\n                path[++pathIdx] = matrix[row][--col];\n            }\n        }\n        return path;\n    }\n}\n</code></pre>\n"}}}}
